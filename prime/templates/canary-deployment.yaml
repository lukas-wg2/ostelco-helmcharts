{{- if .Values.canary }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "prime.fullname" . }}-canary
  labels:
    app: {{ template "prime.name" . }}-canary
    chart: {{ template "prime.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    tier: backend
    track: canary
    tag: {{ .Values.canary.tag }}
  {{- if .Values.canary.annotations }}  
  annotations: 
{{ toYaml .Values.canary.annotations | indent 4 }}
  {{- else if .Values.prime.annotations }}
  annotations: 
{{ toYaml .Values.prime.annotations | indent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "prime.name" . }}-canary
      release: {{ .Release.Name }}
      tier: backend
      track: canary
  template:
    metadata:
      labels:
        app: {{ template "prime.name" . }}-canary
        release: {{ .Release.Name }}
        tier: backend
        track: canary
    spec:
      volumes:
      - name: config-data
        emptyDir: {}
      {{- if .Values.canary.secretVolumes }}
        {{- range .Values.canary.secretVolumes }}
      - name: {{ .secretName }}-prime
        secret: 
          secretName: {{ .secretName }}
        {{- if and .secretKey .secretPath }}  
          items:
            - key: {{ .secretKey }}
              path: {{ .secretPath }}
        {{- end }}      
        {{- end }}
      {{- else if .Values.prime.secretVolumes }}
        {{- range .Values.prime.secretVolumes }}
      - name: {{ .secretName }}-prime
        secret: 
          secretName: {{ .secretName }}
        {{- if and .secretKey .secretPath }}  
          items:
            - key: {{ .secretKey }}
              path: {{ .secretPath }}
        {{- end }}        
        {{- end }}
      {{- end }}
      {{- range .Values.ocsEsp.secretVolumes }}
      - name: {{ .secretName }}-ocs
        secret: 
          secretName: {{ .secretName }}
      {{- end }}
      {{- range .Values.apiEsp.secretVolumes }}
      - name: {{ .secretName }}-api
        secret: 
          secretName: {{ .secretName }}
      {{- end }}
      {{- range .Values.metricsEsp.secretVolumes }}
      - name: {{ .secretName }}-metrics
        secret: 
          secretName: {{ .secretName }}
      {{- end }}
      {{- range .Values.alvinApiEsp.secretVolumes }}
      - name: {{ .secretName }}-alvin-api
        secret: 
          secretName: {{ .secretName }}
      {{- end }}
      {{- range .Values.houstonApiEsp.secretVolumes }}
      - name: {{ .secretName }}-houston-api
        secret: 
          secretName: {{ .secretName }}
      {{- end }}
      
      # {{- if .Values.certs.enabled }}
      # - name: api-tls-volume
      #   secret: 
      #     secretName: api-tls
      #     items:
      #     - key: tls.crt
      #       path: nginx.crt
      #     - key: tls.key
      #       path: nginx.key  
      # - name: ocs-tls-volume
      #   secret: 
      #     secretName: ocs-tls 
      #     items:
      #     - key: tls.crt
      #       path: nginx.crt
      #     - key: tls.key
      #       path: nginx.key    
      # - name: metrics-tls-volume
      #   secret: 
      #     secretName: metrics-tls
      #     items:
      #     - key: tls.crt
      #       path: nginx.crt
      #     - key: tls.key
      #       path: nginx.key  
      # - name: alvin-api-tls-volume
      #   secret: 
      #     secretName: alvin-api-tls
      #     items:
      #     - key: tls.crt
      #       path: nginx.crt
      #     - key: tls.key
      #       path: nginx.key  
      # - name: houston-api-tls-volume
      #   secret: 
      #     secretName: houston-api-tls
      #     items:
      #     - key: tls.crt
      #       path: nginx.crt
      #     - key: tls.key
      #       path: nginx.key               
      # {{- end }}  

      ## Start of inti containers
      initContainers:
        - name: "init-downloader"
          image: "google/cloud-sdk:latest"
          command: ['sh', '-c', 'gsutil cp {{ .Values.prime.configDataBucket }}/*.* /config-data/']
          volumeMounts:
          - name: config-data
            mountPath: /config-data/
      ## End of init containers  
      containers:
      ## Start of ocs-esp container 
      {{- if .Values.ocsEsp.enabled }}
      - name: ocs-esp
        image: {{ .Values.esp.image }}:{{ .Values.esp.tag }}
        imagePullPolicy: {{ .Values.esp.pullPolicy }}
        args: [
          {{- range $k, $v := .Values.ocsEsp.ports }}
          "--{{ $k }}={{ $v }}",
          {{- end }}
          "--status_port=8090",
          "--service={{ .Values.ocsEsp.endpointAddress }}",
          "--rollout_strategy=managed",
          "--backend=grpc://127.0.0.1:8082"
        ]
        {{- if .Values.ocsEsp.env }}
          env: 
            {{- range $key, $value := .Values.ocsEsp.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
            {{- end }}
        {{- end }}
        {{- if .Values.ocsEsp.ports }}
        ports:
          {{- range $k, $v := .Values.ocsEsp.ports }}
        - containerPort: {{ $v }}
          {{- end }}
        {{- end }}
        volumeMounts:
        {{- range .Values.ocsEsp.secretVolumes }}
        - mountPath: {{ .containerMountPath }}
          name: {{ .secretName }}-ocs
          readOnly: true
        {{- end }} 

        # {{- if .Values.certs.enabled }}
        # - mountPath: /etc/nginx/ssl
        #   name: ocs-tls-volume
        #   readOnly: true
        # {{- end }}

      {{- end }}    
      ## End of ocs-esp container 
      ## Start of api-esp container 
      {{- if .Values.apiEsp.enabled }}
      - name: api-esp
        image: {{ .Values.esp.image }}:{{ .Values.esp.tag }}
        imagePullPolicy: {{ .Values.esp.pullPolicy }}
        args: [
          {{- range $k, $v := .Values.apiEsp.ports }}
          "--{{ $k }}={{ $v }}",
          {{- end }}
          "--status_port=8092",
          "--service={{ .Values.apiEsp.endpointAddress }}",
          "--rollout_strategy=managed",
          "--backend=127.0.0.1:8080"
        ]
        {{- if .Values.apiEsp.env }}
          env: 
            {{- range $key, $value := .Values.apiEsp.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
            {{- end }}
        {{- end }}
        {{- if .Values.apiEsp.ports }}
        ports:
         {{- range $k, $v := .Values.apiEsp.ports }}
        - containerPort: {{ $v }}
          {{- end }}
        {{- end }}
        volumeMounts:
        {{- range .Values.apiEsp.secretVolumes }}
        - mountPath: {{ .containerMountPath }}
          name: {{ .secretName }}-api
          readOnly: true
        {{- end }} 

        # {{- if .Values.certs.enabled }}
        # - mountPath: /etc/nginx/ssl
        #   name: api-tls-volume
        #   readOnly: true
        # {{- end }} 
      {{- end }}
      ## End of api-esp container 
      ## Start of metrics-esp container 
      {{- if .Values.metricsEsp.enabled }}
      - name: metrics-esp
        image: {{ .Values.esp.image }}:{{ .Values.esp.tag }}
        imagePullPolicy: {{ .Values.esp.pullPolicy }}
        args: [
          {{- range $k, $v := .Values.metricsEsp.ports }}
          "--{{ $k }}={{ $v }}",
          {{- end }}
          "--status_port=8094",
          "--service={{ .Values.metricsEsp.endpointAddress }}",
          "--rollout_strategy=managed",
          "--backend=127.0.0.1:8083"
        ]
        {{- if .Values.metricsEsp.env }}
          env: 
            {{- range $key, $value := .Values.metricsEsp.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
            {{- end }}
        {{- end }}
        {{- if .Values.metricsEsp.ports }}
        ports:
          {{- range $k, $v := .Values.metricsEsp.ports }}
        - containerPort: {{ $v }}
          {{- end }}
        {{- end }}
        volumeMounts:
        {{- range .Values.metricsEsp.secretVolumes }}
        - mountPath: {{ .containerMountPath }}
          name: {{ .secretName }}-metrics
          readOnly: true
        {{- end }}  

        # {{- if .Values.certs.enabled }}
        # - mountPath: /etc/nginx/ssl
        #   name: metrics-tls-volume
        #   readOnly: true
        # {{- end }}
      {{- end }}
      ## End of metrics-esp container 
      ## Start of alvin-api-esp container 
      {{- if .Values.alvinApiEsp.enabled }}
      - name: alvin-api-esp
        image: {{ .Values.esp.image }}:{{ .Values.esp.tag }}
        imagePullPolicy: {{ .Values.esp.pullPolicy }}
        args: [
          {{- range $k, $v := .Values.alvinApiEsp.ports }}
          "--{{ $k }}={{ $v }}",
          {{- end }}
          "--status_port=8097",
          "--service={{ .Values.alvinApiEsp.endpointAddress }}",
          "--rollout_strategy=managed",
          "--backend=127.0.0.1:8080"
        ]
        {{- if .Values.alvinApiEsp.env }}
          env: 
            {{- range $key, $value := .Values.alvinApiEsp.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
            {{- end }}
        {{- end }}
        {{- if .Values.alvinApiEsp.ports }}
        ports:
          {{- range $k, $v := .Values.alvinApiEsp.ports }}
        - containerPort: {{ $v }}
          {{- end }}
        {{- end }}
        volumeMounts:
        {{- range .Values.alvinApiEsp.secretVolumes }}
        - mountPath: {{ .containerMountPath }}
          name: {{ .secretName }}-alvin-api
          readOnly: true
        {{- end }}  

        # {{- if .Values.certs.enabled }}
        # - mountPath: /etc/nginx/ssl
        #   name: alvin-api-tls-volume
        #   readOnly: true
        # {{- end }}
      {{- end }}
      ## End of alvin-api-esp container 
      ## Start of houston-api-esp container 
      {{- if .Values.houstonApiEsp.enabled }}
      - name: houston-api-esp
        image: {{ .Values.esp.image }}:{{ .Values.esp.tag }}
        imagePullPolicy: {{ .Values.esp.pullPolicy }}
        args: [
          {{- range $k, $v := .Values.houstonApiEsp.ports }}
          "--{{ $k }}={{ $v }}",
          {{- end }}
          "--status_port=8095",
          "--service={{ .Values.houstonApiEsp.endpointAddress }}",
          "--rollout_strategy=managed",
          "--backend=127.0.0.1:8080"
        ]
        {{- if .Values.houstonApiEsp.env }}
          env: 
            {{- range $key, $value := .Values.houstonApiEsp.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
            {{- end }}
        {{- end }}
        {{- if .Values.houstonApiEsp.ports }}
        ports:
          {{- range $k, $v := .Values.houstonApiEsp.ports }}
        - containerPort: {{ $v }}
          {{- end }}
        {{- end }}
        volumeMounts:
        {{- range .Values.houstonApiEsp.secretVolumes }}
        - mountPath: {{ .containerMountPath }}
          name: {{ .secretName }}-houston-api
          readOnly: true
        {{- end }}  

        # {{- if .Values.certs.enabled }}
        # - mountPath: /etc/nginx/ssl
        #   name: houston-api-tls-volume
        #   readOnly: true
        # {{- end }}
      {{- end }}
      ## End of houston-api-esp container 
      ## Start of prime container  
      - name: prime
        image: "{{ .Values.canary.image | default .Values.prime.image  }}:{{ .Values.canary.tag | default .Values.prime.tag }}"
        imagePullPolicy: {{ .Values.canary.pullPolicy | default .Values.prime.pullPolicy }}
        {{- if or (or .Values.canary.env .Values.canary.envFromSecret) (or .Values.prime.env .Values.prime.envFromSecret)  }}
        env: 
        {{- end }}
        {{- if .Values.canary.env }}
          {{- range $key, $value := .Values.canary.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
          {{- end }}
          {{- range .Values.canary.envFromSecret }}  
        - name: {{ .name }}
          valueFrom:
            secretKeyRef:
              name: {{ .secretName }}
              key: {{ .secretKey }}
          {{- end }}
        {{- else if .Values.prime.env }}
          {{- range $key, $value := .Values.prime.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
          {{- end }}
          {{- range .Values.prime.envFromSecret }}  
        - name: {{ .name }}
          valueFrom:
            secretKeyRef:
              name: {{ .secretName }}
              key: {{ .secretKey }}
          {{- end }}
        {{- end }}  

        volumeMounts:
        - name: config-data
          mountPath: "/config-data"
          readOnly: true
        {{- if .Values.canary.secretVolumes }} 
          {{- range .Values.canary.secretVolumes }}
        - name: {{ .secretName }}-prime
          mountPath: {{ .containerMountPath }}
          readOnly: true
          {{- end }}
        {{- else if .Values.prime.secretVolumes }}
          {{- range .Values.prime.secretVolumes }}
        - name: {{ .secretName }}-prime
          mountPath: {{ .containerMountPath }}
          readOnly: true
          {{- end }}
        {{- end }}  
        ports: 
        {{- if .Values.canary.ports }} 
          {{- range .Values.canary.ports }}
        - containerPort: {{ . }}
          {{- end }} 
        {{- else if .Values.prime.ports }}
          {{- range .Values.prime.ports }}
        - containerPort: {{ . }}
          {{- end }}  
        {{- end }} 
        {{- if .Values.canary.livenessProbe }}
        livenessProbe:
          httpGet:
            path: {{ .Values.canary.livenessProbe.path }}
            port: {{ .Values.canary.livenessProbe.port }}
        {{- else if .Values.prime.livenessProbe }}
        livenessProbe:
          httpGet:
            path: {{ .Values.prime.livenessProbe.path }}
            port: {{ .Values.prime.livenessProbe.port }}
        {{- end }}  
        {{- if .Values.canary.readinessProbe }}
        readinessProbe:
          httpGet:
            path: {{ .Values.canary.readinessProbe.path }}
            port: {{ .Values.canary.readinessProbe.port }}
        {{- else if .Values.prime.readinessProbe }}  
        readinessProbe:
          httpGet:
            path: {{ .Values.prime.readinessProbe.path }}
            port: {{ .Values.prime.readinessProbe.port }}
         {{- end }}      
        resources:
        {{- if .Values.prime.resources }}
{{ toYaml .Values.prime.resources | indent 12 }}
        {{- else if .Values.canary.resources }}
{{ toYaml .Values.canary.resources | indent 12 }}  
         {{- end }}      
        ## End of prime container 
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}


{{- end }}